public class PowerPlant {
	private Generator generator;
	private Reactor reactor;
	private CoolingSystem coolingSystem;

	public PowerPlant(Generator generator, Reactor reactor, CoolingSystem coolingSystem) {
		setGenerator(generator);
		setReactor(reactor);
		setCoolingSystem(coolingSystem);
	}

	public Generator getGenerator() {
		return this.generator;
	}

	public void setGenerator(Generator generator) {
		this.generator = generator;
	}

	public Reactor getReactor() {
		return this.reactor;
	}

	public void setReactor(Reactor reactor) {
		this.reactor = reactor;
	}

	public CoolingSystem getCoolingSystem() {
		return this.coolingSystem;
	}

	public void setCoolingSystem(CoolingSystem coolingSystem) {
		this.coolingSystem = coolingSystem;
	}

	/**
	 * Runs the power plant.
	 * Returns all the energy generated in return
	 *
	 * @param temperature The temperature of the power plant
	 * @param time The time the power plant runs at the above temperature
	 * @return The total amount of energy produced
	 */
	public double run(double temperature, double time) {
		double totalSteam = 0;
		double totalResidualHeat = 0;

		// Getting all the steam and residual heat generated by the reactor
		for(Core core : this.reactor.getCores()){
			SplitResult splitResult = core.split(temperature, time);
			totalSteam += splitResult.getHeatAmount();
			totalResidualHeat += splitResult.getResidualHeat();
		}

		// Generating energy
		this.generator.generateEnergy(totalSteam);

		// Cooling the reactor
		this.coolingSystem.abductResidualHeat(totalResidualHeat);

		return this.generator.getTotalAmountEnergy();
	}
}
